<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
		<section name="urlrewrites" type="ProviderPortal.URLRewriter" requirePermission="false"/>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler" requirePermission="false" />
		<sectionGroup name="dotNetOpenId">
			<section name="relyingParty" type="DotNetOpenId.Configuration.RelyingPartySection" requirePermission="false" allowLocation="true"/>
			<section name="provider" type="DotNetOpenId.Configuration.ProviderSection" requirePermission="false" allowLocation="true"/>
			<section name="untrustedWebRequest" type="DotNetOpenId.Configuration.UntrustedWebRequestSection" requirePermission="false" allowLocation="false"/>
		</sectionGroup>
	</configSections>

	<!-- this is an optional configuration section where aspects of dotnetopenid can be customized -->
	<dotNetOpenId>
		<provider>
			<!-- Uncomment the following to activate the sample custom store.  -->
			<!--<store type="ProviderPortal.Code.CustomStore, ProviderPortal" />-->
		</provider>
		<untrustedWebRequest>
			<whitelistHosts>
				<!-- since this is a sample, and will often be used with localhost -->
				<add name="localhost" />
			</whitelistHosts>
		</untrustedWebRequest>
	</dotNetOpenId>

	<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. -->
	<uri>
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri>

	<connectionStrings/>
	<!-- 
       Original version created by  Richard Birkby (2002-02-22, http://www.codeproject.com/aspnet/URLRewriter.asp)
       Maps from old website to new website using Regular Expressions
       rule/url - old website url (Regular Expression)
       rule/rewrite - new website replacement expression
       Of two or more rules which match a given request, the first  will always take precedance.
    -->
	<urlrewrites>
		<rule>
			<!--  This rewrites urls like: user/john ->user.aspx?username=john-->
			<url>/user/(.*)</url>
			<rewrite>/user.aspx?username=$1</rewrite>
		</rule>
	</urlrewrites>
	<system.web>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true" />
		<sessionState mode="InProc" cookieless="false"/>
		<membership defaultProvider="AspNetReadOnlyXmlMembershipProvider">
			<providers>
				<clear/>
				<add name="AspNetReadOnlyXmlMembershipProvider" type="ReadOnlyXmlMembershipProvider"
				     description="Read-only XML membership provider"
				     xmlFileName="~/App_Data/Users.xml" />
			</providers>
		</membership>
		<authentication mode="Forms">
			<forms name="ProviderSession"/> <!-- named cookie prevents conflicts with other samples -->
		</authentication>
		<customErrors mode="RemoteOnly"/>
		<!-- Trust level discussion:
		Full: everything works
		High: TRACE compilation symbol must NOT be defined
		Medium/Low: doesn't work on default machine.config, because WebPermission.Connect is denied.
		-->
		<trust level="High" originUrl=""/>
	</system.web>
	<location path="decide.aspx">
		<system.web>
			<authorization>
				<deny users="?"/>
			</authorization>
		</system.web>
	</location>

	<!-- log4net is a 3rd party (free) logger library that dotnetopenid will use if present but does not require. -->
	<log4net>
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Provider.log" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="100KB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline" />
			</layout>
		</appender>
		<appender name="TracePageAppender" type="ProviderPortal.Code.TracePageAppender, ProviderPortal">
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline" />
			</layout>
		</appender>
		<!-- Setup the root category, add the appenders and set the default level -->
		<root>
			<level value="INFO" />
			<!--<appender-ref ref="RollingFileAppender" />-->
			<appender-ref ref="TracePageAppender" />
		</root>
		<!-- Specify the level for some specific categories -->
		<logger name="DotNetOpenId">
			<level value="ALL" />
		</logger>
	</log4net>
</configuration>
