Index: nhibernate/default.build
===================================================================
--- nhibernate/default.build	(revision 3416)
+++ nhibernate/default.build	(working copy)
@@ -23,8 +23,8 @@
 		<include name="Iesi.Collections.Test/Iesi.Collections.Test.build" />
 		<include name="NHibernate/NHibernate.build" />
 		<include name="NHibernate.DomainModel/NHibernate.DomainModel.build" />
-		<include name="NHibernate.Test/NHibernate.Test.build" />
-		<include name="NHibernate.Test.Performance/NHibernate.Test.Performance.build" />
+		<!-- <include name="NHibernate.Test/NHibernate.Test.build" />
+		<include name="NHibernate.Test.Performance/NHibernate.Test.Performance.build" /> -->
 		<include name="NHibernate.Examples/NHibernate.Examples.build" />
 		<include name="NHibernate.Caches.SysCache/NHibernate.Caches.SysCache.build" />
 		<include name="NHibernate.Caches.SysCache2/NHibernate.Caches.SysCache2.build" />
Index: nhibernate/build-common/common.xml
===================================================================
--- nhibernate/build-common/common.xml	(revision 3416)
+++ nhibernate/build-common/common.xml	(working copy)
@@ -22,7 +22,7 @@
 		It generates Visual Studio.NET 2003 documentation.
 	-->
 	<property name="vshik.installed" value="false" overwrite="false" />
-	<property name="vshik.path" value="${environment::get-folder-path('ProgramFiles')}/Microsoft Help 2.0 SDK" />
+	<!-- <property name="vshik.path" value="${environment::get-folder-path('ProgramFiles')}/Microsoft Help 2.0 SDK" /> -->
 
 	<!-- 
 		if nunit2report tasks from http://nunit2report.sourceforge.net/ has been installed
@@ -41,7 +41,7 @@
 	<property name="clover.framework" value=".NET 2.0" if="${nant.settings.currentframework == 'net-2.0'}" />
 	<property name="clover.framework" value=".NET 1.1" if="${nant.settings.currentframework == 'mono-1.0'}" />
 
-	<property name="clover.home" value="${environment::get-folder-path('ProgramFiles')}/Cenqua/Clover.NET 2.0 for ${clover.framework}" />
+	<!-- <property name="clover.home" value="${environment::get-folder-path('ProgramFiles')}/Cenqua/Clover.NET 2.0 for ${clover.framework}" /> -->
 	<property name="clover.assembly" value="CloverNAnt-0.85.dll" />
 
 	<if test="${clover.enabled}">
@@ -194,6 +194,11 @@
 		<property name="current.build.defines" value="${build.defines}MONO,MONO_1_0" />
 		<property name="link.sdkdoc.version" value="MsdnOnline" />
 	</target>
+	<target name="set-mono-2.0-framework-configuration">
+		<property name="nant.settings.currentframework" value="mono-2.0" />
+		<property name="current.build.defines" value="${build.defines}MONO,MONO_1_0,MONO_2_0" />
+		<property name="link.sdkdoc.version" value="MsdnOnline" />
+	</target>
 
 	<target name="display-current-runtime">
 		<echo message="" />
Index: nhibernate/src/NHibernate/NHibernate.build
===================================================================
--- nhibernate/src/NHibernate/NHibernate.build	(revision 3416)
+++ nhibernate/src/NHibernate/NHibernate.build	(working copy)
@@ -18,6 +18,8 @@
 			<include name="System.dll" />
 			<include name="System.XML.dll" />
 			<include name="System.Data.dll" />
+			<include name="Mono.Data.dll" />
+			<include name="Mono.Data.SqliteClient.dll" />
 			<include name="System.Data.OracleClient" if="${nant.settings.currentframework == 'net-2.0'}" />
 			<include name="System.Web.dll" />
 			<include name="Iesi.Collections.dll" />
Index: nhibernate/src/NHibernate/Driver/SqliteClientDriver.cs
===================================================================
--- nhibernate/src/NHibernate/Driver/SqliteClientDriver.cs	(revision 0)
+++ nhibernate/src/NHibernate/Driver/SqliteClientDriver.cs	(revision 0)
@@ -0,0 +1,56 @@
+using Mono.Data;
+using Mono.Data.SqliteClient;
+
+namespace NHibernate.Driver
+{
+	/// <summary>
+	/// NHibernate driver for the SQLite.NET data provider.
+	/// <p>
+	/// Author: <a href="mailto:ib@stalker.ro"> Ioan Bizau </a>
+	/// </p>
+	/// </summary>
+	/// <remarks>
+	/// <p>
+	/// In order to use this Driver you must have the SQLite.NET.dll Assembly available for NHibernate to load it.
+	/// You must also have the SQLite.dll and SQLite3.dll libraries.
+	/// </p>
+	/// <p>
+	/// Please check <a href="http://www.sqlite.org/"> http://www.sqlite.org/ </a> for more information regarding SQLite.
+	/// </p>
+	/// </remarks>
+	public class SqliteClientDriver : ReflectionBasedDriver
+	{
+		/// <summary>
+		/// Initializes a new instance of <see cref="SQLiteDriver"/>.
+		/// </summary>
+		/// <exception cref="HibernateException">
+		/// Thrown when the <c>SQLite.NET</c> assembly can not be loaded.
+		/// </exception>
+		public SqliteClientDriver() : base(
+			"Mono.Data.SqliteClient",
+			"Mono.Data.SqliteClient.SqliteConnection",
+			"Mono.Data.SqliteClient.SqliteCommand")
+		{
+		}
+
+		public override bool UseNamedPrefixInSql
+		{
+			get { return true; }
+		}
+
+		public override bool UseNamedPrefixInParameter
+		{
+			get { return true; }
+		}
+
+		public override string NamedPrefix
+		{
+			get { return ":"; }
+		}
+
+		public override bool SupportsMultipleOpenReaders
+		{
+			get { return false; }
+		}
+	}
+}
\ No newline at end of file
Index: nhibernate/src/NHibernate/Driver/ReflectionBasedDriver.cs
===================================================================
--- nhibernate/src/NHibernate/Driver/ReflectionBasedDriver.cs	(revision 3416)
+++ nhibernate/src/NHibernate/Driver/ReflectionBasedDriver.cs	(working copy)
@@ -19,8 +19,8 @@
 		public ReflectionBasedDriver(string driverAssemblyName, string connectionTypeName, string commandTypeName)
 		{
 			// Try to get the types from an already loaded assembly
-			connectionType = ReflectHelper.TypeFromAssembly(connectionTypeName, driverAssemblyName, false);
-			commandType = ReflectHelper.TypeFromAssembly(commandTypeName, driverAssemblyName, false);
+			connectionType = ReflectHelper.TypeFromAssembly(connectionTypeName, driverAssemblyName, true);
+			commandType = ReflectHelper.TypeFromAssembly(commandTypeName, driverAssemblyName, true);
 
 			if (connectionType == null || commandType == null)
 			{
