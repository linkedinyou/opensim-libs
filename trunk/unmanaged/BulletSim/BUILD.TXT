The OpenSimulator BulletSPlugin expects to use a "BulletSim.dll" which 
provides the linkage to the Bullet physics engine. BulletSim.dll is
written in C++ and is statically linked with the Bullet engine.
BulletSim.dll must be compiled separately as the OpenSimulator build
environment only builds the C# code.

For Visual Studio 2010, the steps are:

1) Download Bullet v2.82 (http://code.google.com/p/bullet/downloads/)
1a) If you are adventurous, you can fetch the latest v2.* from svn
    (http://code.google.com/p/bullet/source/checkout).
    As of this writing (August 16, 2013), Bullet development is mostly doing
    bug fixes on the v2 branch and new development is happening
    on a new v3 branch.  When Bullet advances to v3, BulletSim
    will probably not build or link and will require rework.
    In the mean time, any of the v2.79+ versions should work.
2) Unpack the tgz or zip into the BulletSim directory (so there is a new
    directory "BulletSim/bullet-2.82/")
3) Apply all the patches for bullet:
	cd bullet-2.82 ; for file in ../*.patch ; do cat $file | patch -p1 ; done
4) cd into the bullet directory and build using your preferred method
    For Visual Studio 2008, open "msvc/2008/0BulletSolution.sln"
    Build a "Release" version.
    To select, 32 or 64 bit versions, make sure the target system
    is the desired architecture. Windows does not select which DLL
    to run depending on the system type so you must put the correct
    architectured version in "BulletSim.dll". BulletSim is distributed
    with a 32 bit version named "lib32/BulletSim.dll" and a 64 bit version
    named "lib64/BulletSim.dll".
4b) There is a Solution file for VS2010 named Bullet-2010.sln.
    While this does built BulletSim, make sure the Framework is
    set to 3.5 which is the version guaranteed to work with OpenSim.
5) cd into "BulletSim/"
6) Open and build with BulletSim.sln or BulletSim-2010.sln
7) Copy "BulletSim/Release/BulletSim.dll" into the
    OpenSimulator "bin/lib32" directory
7b) Copy "BulletSim/x64/Release/BulletSim.dll" into the
    OpenSimulator "bin/lib64" directory

For Linux/Mac OSX (tested on Ubuntu and Lion)
1) Download Bullet v2.82 (http://code.google.com/p/bullet/downloads/)
1b) As noted above, you can also fetch the latest Subversion
    version of the version 2 Bullet.
2) Unpack the tgz or zip into the BulletSim directory somewhere
3) Apply all patches for bullet:
	cd bullet-2.82 ; for file in ../*.patch ; do cat $file | patch -p1 ; done
4) Follow the Bullet build instructions 
    (http://bulletphysics.org/mediawiki-1.5.8/index.php/Installation),
    create the directory "bullet-build" and cd into that directory.
	Here is a bash script that builds bullet-2.82:
				#! /bin/bash
				cd bullet-2.82
				mkdir -p bullet-build
				cd bullet-build
				cmake .. -G "Unix Makefiles" \
				        -DBUILD_EXTRAS=on \
				        -DBUILD_DEMOS=off \
				        -DBUILD_SHARED_LIBS=off \
				        -DINSTALL_LIBS=on \
				        -DINSTALL_EXTRA_LIBS=on \
				        -DCMAKE_BUILD_TYPE=Release
				make -j4
    (for 64bit systems, you must also add the cmake flag -DCMAKE_CXX_FLAGS="-fPIC" )
    (for Mac OSX systems, you must also add the cmake flag -DCMAKE_OSX_ARCHITECTURES=i386 as mono runs as a 32bit process on OSX)
    This builds bullet static libraries and installs them into /usr/local/lib.
    Finally, do "sudo make install" to install the include files and .a libraries.
5) cd back to the BulletSim directory
6) Do "make"
7) On Linux, copy "libBulletSim.so" into the OpenSimulator "bin/lib32" or "bin/lib64"
   directories depending on the architecture of your system.
   On Mac OSX, copy "libBulletSim.dylib" into the OpenSimulator "bin/lib32" directory


This was developed with Bullet v2.82. If you use a different version, you will
need to change the include and library directories for the BulletSim compilation.

